y = month,
fill = "#C0C0C0")) +
geom_density_ridges(alpha = .5) +
theme(legend.position = "none") +
labs(title = "Public Health",
x = "Number of Measures",
y = "Month",
tags = "(C)") +
theme(text = element_text(size = 12, color = "white"),
rect = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
legend.key = element_rect(fill = "black"),
axis.text = element_text(color = "white"),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10))
soc_dist_plot + mov_res_plot + pub_health + plot_layout(ncol = 3)
cases_deaths_per_100k %>%
filter(date >= '2020-03-14') %>%
ggplot(aes(x = date,
y = cases)) +
geom_segment(aes(x = date,
xend = date,
y = 0,
yend = cases)) +
geom_point(size = 1,
color = "#8fe0bb",
fill = alpha("#dcdf3c", 0.3),
alpha = 0.7,
shape = 21,
stroke = 2) +
geom_line(alpha = .5) +
labs(title = "Ireland's daily confirmed cases",
x = "Date",
y = "Cases",
tag = "(A)") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10))
cases_deaths_per_100k %>%
filter(date >= '2020-03-14') %>%
ggplot(aes(x = date,
y = cases)) +
geom_segment(aes(x = date,
xend = date,
y = 0,
yend = cases)) +
geom_point(size = 1,
color = "#8fe0bb",
fill = alpha("#dcdf3c", 0.3),
alpha = 0.7,
shape = 21,
stroke = 2) +
geom_line(alpha = .5) +
labs(title = "Ireland's daily confirmed cases",
x = "Date",
y = "Cases",
tag = "(A)") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
panel.grid = element_blank())
cases_deaths_per_100k %>%
filter(date >= '2020-03-14') %>%
ggplot(aes(x = date,
y = deaths)) +
geom_segment(aes(x = date,
xend = date,
y = 0,
yend = deaths)) +
geom_point(size = 1,
color = "#8fe0bb",
fill = alpha("#b23831", 0.3),
alpha = 0.7,
shape = 21,
stroke = 2) +
geom_line(alpha = .5) +
labs(title = "Ireland's daily deaths",
x = "Date",
y = "Deaths",
tags = "(B)") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
g1 + a1 + plot_layout(nrow = 2)
a1 <- movement_long %>%
ggplot(aes(x = date,
y = move_pct,
color = movement)) +
geom_line() +
geom_vline(xintercept = as.numeric(movement_long$date[movement_long$date == '2020-03-12']), color = "black") +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
date_labels = "%b") +
labs(title = "Apple Maps Usage for Directions",
x = "Date",
y = "Percentage",
tags = "(B)") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
google_mobility_long <- corona_ire %>%
pivot_longer(c("gcmr_retail_recreation","gcmr_grocery_pharmacy","gcmr_parks"), #"gcmr_transit_stations",#"gcmr_workplaces","gcmr_residential"),
names_to = "google_mobility",
values_to = "mobility_pct") %>%
filter(date >= '2020-02-23')
g1 <- google_mobility_long %>%
ggplot(aes(x = date,
y = mobility_pct,
color = google_mobility)) +
geom_line() +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = as.numeric(movement_long$date[movement_long$date == '2020-03-12']), color = "black")  +
theme_linedraw() +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
date_labels = "%b") +
labs(title = "Google Community Mobility Reports",
x = "Date",
y = "Percentage",
tags = "(A)") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
g1 + a1 + plot_layout(nrow = 2)
google_mobility_long <- corona_ire %>%
pivot_longer(c("gcmr_retail_recreation","gcmr_grocery_pharmacy","gcmr_parks"), #"gcmr_transit_stations",#"gcmr_workplaces","gcmr_residential"),
names_to = "google_mobility",
values_to = "mobility_pct") %>%
filter(date >= '2020-02-23')
g1 <- google_mobility_long %>%
ggplot(aes(x = date,
y = mobility_pct,
color = google_mobility)) +
geom_line() +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = as.numeric(movement_long$date[movement_long$date == '2020-03-12']), color = "black")  +
theme_linedraw() +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
date_labels = "%b") +
labs(title = "Google Community Mobility Reports",
x = "Date",
y = "Percentage",
tags = "(A)",
color = "Mobility Locations") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
g1 + a1 + plot_layout(nrow = 2)
google_mobility_long <- corona_ire %>%
pivot_longer(c("gcmr_retail_recreation","gcmr_grocery_pharmacy","gcmr_parks"), #"gcmr_transit_stations",#"gcmr_workplaces","gcmr_residential"),
names_to = "google_mobility",
values_to = "mobility_pct") %>%
filter(date >= '2020-02-23')
g1 <- google_mobility_long %>%
ggplot(aes(x = date,
y = mobility_pct,
color = google_mobility)) +
geom_line() +
geom_hline(yintercept = 0, color = "black", alpha = .3) +
geom_vline(xintercept = as.numeric(movement_long$date[movement_long$date == '2020-03-12']), color = "black", alpha = .3)  +
theme_linedraw() +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
date_labels = "%b") +
labs(title = "Google Community Mobility Reports",
x = "Date",
y = "Percentage",
tags = "(A)",
color = "Mobility Locations") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
g1 + a1 + plot_layout(nrow = 2)
a1 <- movement_long %>%
ggplot(aes(x = date,
y = move_pct,
color = movement)) +
geom_line() +
geom_vline(xintercept = as.numeric(movement_long$date[movement_long$date == '2020-03-12']), color = "black") +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
date_labels = "%b") +
labs(title = "Apple Maps Usage for Directions",
x = "Date",
y = "Percentage",
tags = "(B)",
color = "Apple Direction
searches") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
google_mobility_long <- corona_ire %>%
pivot_longer(c("gcmr_retail_recreation","gcmr_grocery_pharmacy","gcmr_parks"), #"gcmr_transit_stations",#"gcmr_workplaces","gcmr_residential"),
names_to = "google_mobility",
values_to = "mobility_pct") %>%
filter(date >= '2020-02-23')
g1 <- google_mobility_long %>%
ggplot(aes(x = date,
y = mobility_pct,
color = google_mobility)) +
geom_line() +
geom_hline(yintercept = 0, color = "black", alpha = .3) +
geom_vline(xintercept = as.numeric(movement_long$date[movement_long$date == '2020-03-12']), color = "black", alpha = .3)  +
theme_linedraw() +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
date_labels = "%b") +
labs(title = "Google Community Mobility Reports",
x = "Date",
y = "Percentage",
tags = "(A)",
color = "Mobility Locations") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
g1 + a1 + plot_layout(nrow = 2)
a1 <- movement_long %>%
ggplot(aes(x = date,
y = move_pct,
color = movement)) +
geom_line() +
geom_vline(xintercept = as.numeric(movement_long$date[movement_long$date == '2020-03-12']), color = "black", alpha = .6) +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
date_labels = "%b") +
labs(title = "Apple Maps Usage for Directions",
x = "Date",
y = "Percentage",
tags = "(B)",
color = "Apple Direction
searches") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
google_mobility_long <- corona_ire %>%
pivot_longer(c("gcmr_retail_recreation","gcmr_grocery_pharmacy","gcmr_parks"), #"gcmr_transit_stations",#"gcmr_workplaces","gcmr_residential"),
names_to = "google_mobility",
values_to = "mobility_pct") %>%
filter(date >= '2020-02-23')
g1 <- google_mobility_long %>%
ggplot(aes(x = date,
y = mobility_pct,
color = google_mobility)) +
geom_line() +
geom_hline(yintercept = 0, color = "black", alpha = .6) +
geom_vline(xintercept = as.numeric(movement_long$date[movement_long$date == '2020-03-12']), color = "black", alpha = .6)  +
theme_linedraw() +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
date_labels = "%b") +
labs(title = "Google Community Mobility Reports",
x = "Date",
y = "Percentage",
tags = "(A)",
color = "Mobility Locations") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
g1 + a1 + plot_layout(nrow = 2)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.align = "centre")
library(coronavirus)
library(tidycovid19)
library(tidyverse)
library(lubridate)
library(gridExtra)
library(DT)
library(widgetframe)
library(kableExtra)
library(httpuv)
#update_dataset()
covid_srb <- covid_df %>%
select(date, confirmed, deaths, soc_dist, mov_rest) %>%
mutate(month = month(date, labe = TRUE, abbr = TRUE),
lag_confirmed = lag(confirmed),
lag_deaths = lag(deaths),
daily_cases = confirmed - lag_confirmed,
daily_deaths = deaths - lag_deaths,
soc_dist = as.factor(soc_dist),
mov_rest = as.factor(mov_rest)) %>%
filter(month >= "Feb") %>%
select(-lag_confirmed, -lag_deaths)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.align = "centre")
library(coronavirus)
library(tidycovid19)
library(tidyverse)
library(lubridate)
library(gridExtra)
library(DT)
library(widgetframe)
library(kableExtra)
library(httpuv)
#update_dataset()
covid_srb <- covid_df %>%
select(date, confirmed, deaths, soc_dist, mov_rest) %>%
mutate(month = month(date, labe = TRUE, abbr = TRUE),
lag_confirmed = lag(confirmed),
lag_deaths = lag(deaths),
daily_cases = confirmed - lag_confirmed,
daily_deaths = deaths - lag_deaths,
soc_dist = as.factor(soc_dist),
mov_rest = as.factor(mov_rest)) %>%
filter(month >= "Feb") %>%
select(-lag_confirmed, -lag_deaths)
covid_df <- download_merged_data(cached = TRUE, silent = TRUE) %>%
filter(iso3c == "SRB")
covid_df <- download_merged_data(cached = TRUE, silent = TRUE) %>%
filter(iso3c == "SRB")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.align = "centre")
library(coronavirus)
library(tidycovid19)
library(tidyverse)
library(lubridate)
library(gridExtra)
library(DT)
library(widgetframe)
library(kableExtra)
library(httpuv)
#update_dataset()
covid_df <- download_merged_data(cached = TRUE, silent = TRUE) %>%
filter(iso3c == "SRB")
covid_srb <- covid_df %>%
select(date, confirmed, deaths, soc_dist, mov_rest) %>%
mutate(month = month(date, labe = TRUE, abbr = TRUE),
lag_confirmed = lag(confirmed),
lag_deaths = lag(deaths),
daily_cases = confirmed - lag_confirmed,
daily_deaths = deaths - lag_deaths,
soc_dist = as.factor(soc_dist),
mov_rest = as.factor(mov_rest)) %>%
filter(month >= "Feb") %>%
select(-lag_confirmed, -lag_deaths)
cases_plot <- covid_srb %>%
filter(date >= "2020-03-01") %>%
ggplot(aes(x = date,
y = daily_cases)) +
geom_col(stat = "identity",
alpha = .6,
fill = "#4545ff") +
ggtitle("Daily Confirmed Cases") +
xlab("Date") +
ylab("Daily Cases") +
theme_linedraw() +
scale_x_date(breaks = 'month',
date_labels = "%b %d") +
geom_vline(xintercept = as.numeric(as.Date("2020-03-15")), color = "red") +
geom_vline(xintercept = as.numeric(as.Date("2020-05-06")), color = "orange") +
geom_vline(xintercept = as.numeric(as.Date("2020-06-21")), color = "#004080") +
geom_vline(xintercept = as.numeric(as.Date("2020-07-03")), color = "red")
deaths_plot <- covid_srb %>%
filter(date >= "2020-03-01") %>%
ggplot(aes(x = date,
y = daily_deaths)) +
geom_col(stat = "identity",
alpha = .6,
fill = "#404040") +
ggtitle("Daily Deaths") +
xlab("Date") +
ylab("Daily Deaths") +
theme_linedraw() +
scale_x_date(breaks = 'month',
date_labels = "%b %d") +
geom_vline(xintercept = as.numeric(as.Date("2020-03-15")), color = "red") +
geom_vline(xintercept = as.numeric(as.Date("2020-05-06")), color = "orange") +
geom_vline(xintercept = as.numeric(as.Date("2020-06-21")), color = "#004080") +
geom_vline(xintercept = as.numeric(as.Date("2020-07-03")), color = "red")
grid.arrange(cases_plot, deaths_plot, nrow = 2)
#finding the average of the last five days, every day
covid_growth_rate <- covid_srb %>%
mutate((five_day = daily_cases + lag(daily_cases) + lag(daily_cases, n = 2) + lag(daily_cases, n = 3) + lag(daily_cases, n = 4))/5,
growth_rate = (five_day/lag(five_day)),
growth_rate = round((growth_rate), 2),
pct_change_cases = round((((daily_cases/lag(daily_cases)) - 1)*100), 2),
pct_change_deaths = round((((daily_deaths/lag(daily_deaths)) - 1)*100), 2)) %>%
replace_na(list(growth_rate = 0,
pct_change_cases = 0,
pct_change_deaths = 0,
five_day_ave  = 0)) %>%
filter(month < "Sep")
covid_summary <- covid_growth_rate %>%
filter(month >= "Mar") %>%
select(date, growth_rate, daily_cases, pct_change_cases, daily_deaths, pct_change_deaths) %>%
rename(`change_deaths%` = pct_change_deaths,
`change_cases%` = pct_change_cases,
growth_factor = growth_rate)
summary_table <- covid_summary %>%
datatable(class = 'cell-border stripe', rownames = FALSE, extensions = 'FixedColumns', options = list(
pageLength = 5,
lengthMenu = c(5, 10, 15, 20),
scrollX = TRUE,
scrollCollapse = TRUE))
covid_average_summary <- covid_growth_rate %>%
mutate(pct_change_cases = replace(pct_change_cases, is.infinite(pct_change_cases), NA),
pct_change_deaths = replace(pct_change_deaths, is.infinite(pct_change_deaths), NA),
growth_rate = replace(growth_rate, is.infinite(growth_rate), NA)) %>%
replace_na(list(growth_rate = 0,
pct_change_cases = 0,
pct_change_deaths = 0,
five_day_ave  = 0)) %>%
filter(month >= "Mar") %>%
select(date, month, growth_rate, daily_cases, pct_change_cases, daily_deaths, pct_change_deaths) %>%
rename(`change_deaths%` = pct_change_deaths,
`change_cases%` = pct_change_cases,
growth_factor = growth_rate)
table_averages_summary <- covid_average_summary %>%
group_by(month) %>%
summarise(`Growth_Factor_Ave` = round((mean(growth_factor )), 3),
`Daily_Cases%_Ave` = round((mean(`change_cases%`)),3),
`Daily_Deaths%_Ave` = round((mean(`change_deaths%`)), 3)) %>%
rename(Month = month) %>%
select(Month,`Growth_Factor_Ave`)
ave_table <- table_averages_summary %>%
datatable(class = 'cell-border stripe', rownames = FALSE, extensions = 'FixedColumns', options = list(
pageLength = 5,
lengthMenu = c(5, 10, 15, 20),
scrollX = TRUE,
scrollCollapse = TRUE))
dist_monthly_proportion <- covid_srb %>%
group_by(month, soc_dist) %>%
summarise(prop = n()) %>%
mutate(proportion = round(((prop/sum(prop))*100), 2)) %>%
ungroup() %>%
select(month, soc_dist, proportion) %>%
pivot_wider(names_from = "soc_dist",
values_from = "proportion") %>%
mutate_all(~replace(., is.na(.), 0)) %>%
rename(Month = month,
Zero = `0`,
One = `1`,
Two = `2`,
Three = `3`,
Four = `4`,
Five = `5`,
Six = `6`) %>%
arrange(Month, Zero, One, Two, Three, Four, Five, Six)
measure_pct <- dist_monthly_proportion %>%
datatable(class = 'cell-border stripe', rownames = FALSE, options = list(
pageLength = 5,
lengthMenu = c(5, 10, 15, 20)))
frameWidget(summary_table)
frameWidget(ave_table)
frameWidget(measure_pct)
measure_pct
blogdown:::serve_site()
blogdown:::serve_site()
?apple_mobility
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.align = "centre")
library(coronavirus)
library(tidycovid19)
library(covdata)
library(tidyverse)
library(lubridate)
library(ggridges)
library(zoo)
library(patchwork)
google_mobility_long <- corona_ire %>%
pivot_longer(c("gcmr_retail_recreation","gcmr_grocery_pharmacy","gcmr_parks"), #"gcmr_transit_stations",#"gcmr_workplaces","gcmr_residential"),
names_to = "google_mobility",
values_to = "mobility_pct") %>%
filter(date >= '2020-02-23')
g1 <- google_mobility_long %>%
ggplot(aes(x = date,
y = mobility_pct,
color = google_mobility)) +
geom_line() +
geom_hline(yintercept = 0, color = "black", alpha = .6) +
geom_vline(xintercept = as.numeric(movement_long$date[movement_long$date == '2020-03-12']), color = "black", alpha = .6)  +
theme_linedraw() +
scale_x_date(date_breaks = "1 month", date_minor_breaks = "1 week",
date_labels = "%b") +
labs(title = "Google Community Mobility Reports",
x = "Date",
y = "Percentage",
tags = "(A)",
color = "Mobility Locations") +
theme_minimal() +
theme(panel.background = element_blank(),
plot.title.position = "plot",
plot.margin = margin(10, 10, 10, 10),
axis.line = element_line(colour = "black"))
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
library(blogdown)
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
